{"version":3,"sources":["components/Dialogs/Dialog/formcontrols.module.css","components/Profile/MyPosts/Post/Post.module.css","components/UsersPage/UsersPage.module.css","assets/preloader/preloader.gif","assets/images/user.png","components/Dialogs/Dialog/formcontrols.jsx","api.js","redux/auth-reducer.js","components/Dialogs/Dialog/Login.jsx","hoc.js","redux/dialogs-page-reducer.js","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsConteiner.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","redux/profile-page-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/ProfileInfo.jsx","components/Profile/ProfileStatus.jsx","components/Profile/Profile.jsx","components/Profile/ProfileConteiner.jsx","components/UsersPage/UsersPage.jsx","redux/users-page-reducer.js","components/UsersPage/UsersPageConteiner.jsx","redux/app-reduser.js","App.js","serviceWorker.js","redux/redux-store.js","index.js","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Profile/Profile.module.css","components/Header/Header.module.css"],"names":["module","exports","maxLength","instance","axios","create","withCredentials","baseURL","headers","getUserStatus","userId","get","putUserStatus","status","put","apiUsers","email","password","rememberMe","post","delete","getUsers","currentPage","pageSize","initialState","data","id","login","isAuth","addAuthCreator","type","payload","addAuthData","dispatch","a","response","resultCode","authReducer","state","action","required","value","undefined","RenderField","input","meta","props","hasError","touched","error","className","styles","children","Input","restProps","TextArea","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","placeholder","component","validate","connect","auth","to","formData","console","log","mapStateToProps","AuthRedirect","Component","dialogs","messages","message","dialogsPageReducer","messageBody","Dialog","s","dialog","Messege","DialogsReduxForm","Dialogs","newdialogs","dialogsPage","map","d","newmessages","m","dialogItems","values","pushMessage","rdxMessage","compose","pushMessageCreator","Header","header","src","onClick","logout","HeaderContainer","this","React","Navbar","nav","item","Button","activeClassName","activeLink","profile","posts","likecount","setStatus","profilePageReducer","textPost","newSymbol","Post","AddPostRedux","MyPosts","newposts","profilePage","p","addPost","MyPostsConteiner","addPostActionCreator","useStyles","makeStyles","root","maxWidth","margin","borderRadius","marginTop","height","media","ProfileInfo","classes","Card","CardActionArea","CardMedia","image","photos","large","title","CardContent","Typography","gutterBottom","variant","fullName","color","aboutMe","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","putStatus","changeStatus","e","target","prevProps","prevState","onChange","autoFocus","onBlur","Profile","content","ProfileApiConteiner","refreshProfile","match","params","then","setProfile","getStatus","withRouter","width","Users","pagesCount","Math","ceil","itemsCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPage","rightPage","filter","selected","onPageChanged","users","u","key","small","CardActions","follow","disabled","followInProgress","some","toogleIsFollow","unfollow","isFetching","setUsers","setTotalCount","totalCount","toogleIsFetching","usersPageReducer","Preloader","preloader","usersPageApi","pageNumber","setCurrentPage","items","getUsersThunk","usersPage","initialize","appReducer","App","initApp","path","render","ProfileConteiner","DialogsConteiner","app","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2d624d42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formcontrols_error__11Mp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3LqW3\",\"info\":\"Post_info__2KpN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imagePhoto\":\"UsersPage_imagePhoto__rh81R\",\"selected\":\"UsersPage_selected__8lo6k\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.667c57b7.gif\";","module.exports = __webpack_public_path__ + \"static/media/user.9aafbcc9.png\";","import React from 'react';\r\nimport styles from './formcontrols.module.css'\r\n\r\nexport const required = value => value ? undefined : 'Field is reuired'\r\n const maxLengthCreator = maxLength => value => value && value.length > maxLength ? `max length must be less then ${maxLength}` : undefined\r\nexport const maxLength15 = maxLengthCreator(15)\r\n\r\n const RenderField = ({input, meta, type, ...props})=> {\r\n   \r\n  const hasError = meta.touched&&meta.error\r\n  return(\r\n    <div className={hasError&&styles.error} >\r\n      {props.children}\r\n      {hasError&&<span>{meta.error} </span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = (props)=>{\r\n  const {input, meta, ...restProps}=props\r\n  return <RenderField {...props} ><input {...input} {...restProps} /></RenderField> \r\n  \r\n}\r\n\r\nexport const TextArea = (props)=>{\r\n  const {input, meta, ...restProps} = props\r\n  return <RenderField {...props}><textarea {...input} {...restProps}/> </RenderField>\r\n}","import axios from 'axios'\n\nlet instance = axios.create({\n  withCredentials:true, \n  baseURL:'https://social-network.samuraijs.com/api/1.0/',\n  headers:{\"API-KEY\":\"c0a17497-1a2e-493a-b759-d597a8494645\"}\n})\n\nconst getUsers = (currentPage, pageSize)=>{\n  return instance.get(`users?page= ${currentPage} &count= ${pageSize}`)\n}\n\nexport const getUserStatus = (userId)=>{\n  return instance.get(`profile/status/${userId}`)\n}\n\nexport const putUserStatus = (status)=>{\n  return instance.put(`profile/status`, {status:status})\n}\n\nexport const apiUsers = {\n  getAuth(){\n    return instance.get('auth/me')\n  },\n\n  login(email, password, rememberMe){\n    \n    return instance.post(`auth/login`, {email, password, rememberMe})\n  },\n  logout(){\n    return instance.delete('auth/login')\n  }\n}\n \nexport default getUsers","import { apiUsers } from \"../api\"\n\nlet initialState = {\n  data:{\n    id:null,\n    email:null,\n    login:null,\n    isAuth:false\n  }\n}\nlet authReducer=(state=initialState, action)=>{\n  \n \n    switch(action.type){\n      case('ADD-AUTH-DATA'):\n      return{...state,\n        ...action.payload,\n        \n      }\n    \n\n      default:\n        return state\n    }\n}\n\nexport let addAuthCreator = (id, email, login, isAuth) => ({type: 'ADD-AUTH-DATA', payload:{id,email,login, isAuth}})\nexport let addAuthData= ()=> async dispatch=>{\n  const response = await apiUsers.getAuth()\n  let { id, email, login } = response.data.data\n  if (response.data.resultCode === 0) {\n    dispatch(addAuthCreator(id, email, login, true))\n  }\n}\n\nexport let login = (email, password, rememberMe) => async dispatch => {\n  const response = await apiUsers.login(email, password, rememberMe)\n    if (response.data.resultCode===0){\n      dispatch(addAuthData())\n    }\n  \n}\nexport let logout = ()=> async dispatch=> {\n  const response = await apiUsers.logout()\n    if (response.data.resultCode===0){\n      dispatch(addAuthCreator(null, null, null, false))\n    }\n  \n}\nexport default authReducer\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport s from './Dialog.module.css';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {login} from '../../../redux/auth-reducer'\r\nimport  {required, maxLength15, Input} from './formcontrols';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst LoginForm=(props)=> {\r\n  \r\n  return(\r\n  \r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field name='email' placeholder='Email' component={Input} validate={required} />\r\n      <div><Field name='password' placeholder='Password' component={Input} validate={required}/></div>\r\n      <div><Field name='rememberMe'    type='checkbox' component='checkbox'/> remember me</div>\r\n      <div><button>Login</button></div>\r\n    </form>\r\n )\r\n}\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n  \r\n\r\n  let addData=(formData)=>{\r\n\r\n  \r\n    props.login(formData.email, formData.password, formData.rememberMe )\r\n    console.log(formData)\r\n  }\r\n  if(props.isAuth){\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\nreturn (\r\n      <div >\r\n        LOGIN \r\n        <div><LoginReduxForm onSubmit={addData}/></div>\r\n      </div>\r\n)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm)\r\nlet mapStateToProps =(state) =>({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default  connect(mapStateToProps,  {login}) (Login)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n let AuthRedirect = (Component) => {\n  let RedirectComponent=(props)=> {\n    \n  return (!props.isAuth)?<Redirect to='/login'/>:<Component {...props}/>\n}\n    \nlet connectedRedirectComponent=connect (mapStateToProps) (RedirectComponent)\nreturn connectedRedirectComponent\n  \n}\n\nlet mapStateToProps =(state)=> ({\n  isAuth:state.auth.isAuth\n})\n\nexport default AuthRedirect","let initialState = {\n  dialogs: [\n    { id: 1, name: 'Neo' },\n    { id: 2, name: 'Trinity' }\n  ],\n\n  messages: [\n    { id: 1, message: 'Hi' },\n    { id: 2, message: 'Hey!' },\n    { id: 3, message: 'How are you?' }]\n  \n}\n\nlet dialogsPageReducer=(state=initialState, action)=>{\n  \n    switch(action.type)\n    {case('PUSH-MESSAGE'): \n      \n      return {...state,\n      messages: [...state.messages, {id:6, message: action.messageBody}],\n     }  \n      default: return state\n    }\n  }\n\n\nexport let pushMessageCreator= (messageBody) => ({type: 'PUSH-MESSAGE', messageBody})\n\nexport default dialogsPageReducer; \n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Dialog.module.css';\r\n\r\nconst Dialog = (props) => {\r\nreturn (\r\n      <div className={s.dialog}>\r\n        <NavLink to={\"/dialogs/\"+ props.id}>{props.name}</NavLink> \r\n      </div>\r\n)\r\n}\r\n \r\n\r\nexport default Dialog","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport Dialog from './Dialog/Dialog';\r\nimport s from './Dialogs.module.css';\r\n\r\nconst Messege = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  \r\n  \r\n  const newdialogs = props.dialogsPage.dialogs.map(d => ( <Dialog name={d.name} id={d.id}/>))\r\n  const newmessages=props.dialogsPage.messages.map(m =><Messege message={m.message} id={m.id}/>)\r\n  \r\n  \r\n  let pushMessage=(values)=>{\r\n    \r\n    props.pushMessage(values.rdxMessage)\r\n  }\r\n \r\nreturn (\r\n  <div className={s.dialogs}>\r\n    <div className={s.dialogItems}>\r\n      {newdialogs}       \r\n    </div>\r\n    <div className={s.messages}>\r\n   \r\n      <div>{newmessages}</div>\r\n      <DialogsReduxForm onSubmit={pushMessage}/>\r\n\r\n    </div>\r\n\r\n  </div> \r\n      )\r\n}\r\nlet DialogsForm = (props)=>{\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field name='rdxMessage' component='textarea'/>\r\n      <button>Add new message</button>\r\n    </form>\r\n  )\r\n}\r\nlet DialogsReduxForm = reduxForm({form:'dialogs'})(DialogsForm)\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport AuthRedirect from '../../hoc';\r\n\r\nimport { pushMessageCreator} from '../../redux/dialogs-page-reducer'\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\nreturn {\r\n  dialogsPage: state.dialogsPage\r\n}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    pushMessage: (messageBody) => {\r\n      \r\n     \r\n      dispatch(pushMessageCreator(messageBody));\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), AuthRedirect)(Dialogs)","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport s from './Header.module.css'\r\n\r\n\r\nconst Header = (props) => {\r\n    \r\n  \r\n    return <header className={s.header}>\r\n        <img src='https://image.shutterstock.com/z/stock-photo-cracks-on-the-surface-of-the-blue-ice-frozen-lake-in-winter-mountains-it-is-snowing-the-hills-of-655427254.jpg' />\r\n        <div className={s.login}>\r\n          {props.isAuth? <div>{props.login}<button onClick={props.logout}>logout</button></div> : <NavLink to='/login'>login</NavLink> }</div>\r\n      </header> \r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component  {\r\n  \r\n\r\n  \r\n\r\n  render(){\r\n    return (<Header {...this.props} />)\r\n   }\r\n}\r\n\r\nlet mapStateToProps=(state)=>({\r\n  login: state.auth.login,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer)","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return <nav className ={s.nav}>\r\n    <div className= {s.item}>\r\n      <Button>\r\n      <NavLink to ='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n      </Button>\r\n    </div>\r\n    <div className={s.item}>\r\n    <Button>\r\n      <NavLink to = '/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n\r\n      </Button>\r\n    </div>\r\n    <div className={s.item}>\r\n    \r\n      <NavLink to = '/users' activeClassName={s.activeLink}><Button>Users</Button></NavLink>\r\n      \r\n    </div>\r\n    <div>\r\n      <a>My News</a>\r\n    </div>\r\n    <div>\r\n      <a>Music</a>\r\n    </div>\r\n    <div>\r\n      <a>Settings</a>\r\n    </div>\r\n    <div>\r\n      <h3>Friends</h3>\r\n    </div>\r\n  </nav>\r\n}\r\n\r\nexport default Navbar","import {getUserStatus, putUserStatus} from '../api'\n\nlet initialState = {\n  profile: null,\n  posts: [\n    {message:'hi', likecount:1},\n    {message:'hey', likecount:2},\n    {message:'lalalay', likecount:3}],\n  \n  status:'hi'\n  \n}\nlet profilePageReducer=(state=initialState, action)=>{\n  \n \n    switch(action.type){\n      case('ADD-POST'):\n      return{...state,\n      posts:[...state.posts,\n        {message: action.post, likecount:0} ]\n        }\n\n      case('UPDATE-TEXT'):\n     return {...state,\n      textPost:action.newSymbol}\n\n      case('SET-PROFILE'):\n      return {...state, profile: action.profile}\n\n      case('SET-STATUS'):\n      return {...state, status: action.status}\n\n      default:\n        return state\n    }\n}\n\nexport let addPostActionCreator = (post) => ({type: 'ADD-POST', post})\nexport let setProfile = (profile) => ({type: 'SET-PROFILE', profile})\n\nexport let setStatus= (status)=> ({type:'SET-STATUS', status})\nexport let getStatus= (userId)=> async (dispatch)=>{\n    const response = await getUserStatus(userId)\n      dispatch(setStatus(response.data))\n  }\n\nexport let putStatus= (status)=> async (dispatch)=>{\n    const response = await putUserStatus(status)\n      if (response.data.resultCode===0){\n      dispatch(setStatus(status))}\n  }\n\nexport default profilePageReducer; \n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className= {s.item}>\r\n            <img src = 'https://qph.fs.quoracdn.net/main-qimg-4981709faa24c748ed82b3670bf32bea'/>\r\n            {props.message}\r\n            <div>\r\n                <span>\r\n                    like {props.likecount}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { addPostActionCreator, onPostChangeActionCreator } from '../../../redux/state';\r\nimport { required, TextArea } from '../../Dialogs/Dialog/formcontrols';\r\nimport Post from './Post/Post'\r\n\r\n\r\nconst MyPosts = (props) => {\r\n  \r\n   let newposts = props.profilePage.posts.map(p => <div><Post message={p.message} likecount= {p.likecount}/></div> )\r\n   let addNewPost=(values)=>{\r\n    props.addPost(values.addPost)\r\n  }\r\n  \r\n    return (\r\n      \r\n        <div>\r\n          <h3>My Posts</h3>\r\n          <div>{newposts}</div>\r\n          <AddPostRedux onSubmit={addNewPost}/>\r\n          \r\n          \r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nlet AddPostForm = (props)=> {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field name='addPost' component={TextArea} validate={required} />\r\n      <button>add new post</button>\r\n    </form>\r\n  )\r\n}\r\nlet AddPostRedux = reduxForm({form:'addPostForm'})(AddPostForm)\r\nexport default MyPosts","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, onPostChangeActionCreator } from '../../../redux/profile-page-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {profilePage: state.profilePage}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (post) => {\r\n                    \r\n      let action = addPostActionCreator(post)\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\nconst MyPostsConteiner = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsConteiner\r\n","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 222,\r\n    margin: 5,\r\n    borderRadius: 9,\r\n    marginTop:11,\r\n    height:333\r\n  },\r\n  media: {\r\n    height: 222 ,\r\n    \r\n  },\r\n  \r\n});\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let job = ()=>{\r\n    return <div>ищу работу</div>}\r\n    if (!props.profile){\r\n        return <div>123</div>\r\n    }\r\n    return (\r\n        <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={props.profile.photos.large}\r\n            title={\"Contemplative Reptile\"}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.profile.fullName}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.profile.aboutMe}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        \r\n      </Card>\r\n  \r\n\r\n\r\n\r\n       /* <div>\r\n            <img src = {props.profile.photos.large}/>\r\n            <div>{props.profile.aboutMe}</div>\r\n            <div>{job}!</div>\r\n            \r\n            <div>\r\n            {props.profile.lookingForAJobDescription}\r\n            </div>\r\n            <div>\r\n            {props.profile.fullName}\r\n            </div>\r\n        </div>*/\r\n    )\r\n    }\r\n\r\nexport default ProfileInfo","import React from 'react';\r\n\r\n\r\n\r\n\r\n class ProfileStatus extends React.Component {\r\n\r\n   state ={\r\n     editMode:false,\r\n     status: this.props.status\r\n   }\r\n\r\n   activateEditMode=()=>{\r\n     this.setState({editMode:true})\r\n\r\n   }\r\n   deactivateEditMode=()=>{\r\n    this.setState({editMode:false})\r\n    this.props.putStatus(this.state.status)\r\n        \r\n  }\r\n\r\n  changeStatus=(e)=>{\r\n    this.setState({status:e.target.value})\r\n//yo1 yo2\r\n//uhhh\r\n  }\r\n\r\n  componentDidUpdate(prevProps,prevState){\r\n    if (prevProps.status!=this.props.status){\r\n    this.setState({status:this.props.status})}\r\n  }\r\n\r\n\r\n\r\n   \r\n   render(){\r\n    \r\n    return <div>\r\n      {!this.state.editMode&&\r\n      <span onClick={this.activateEditMode} >{this.props.status||'----'}</span>}\r\n      {this.state.editMode&&\r\n      <div>\r\n        <input onChange={this.changeStatus} autoFocus={true} \r\n               onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n      </div>}\r\n    </div>\r\n   }\r\n    \r\n}\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport MyPostsConteiner from './MyPosts/MyPostsConteiner';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n  \r\n  \r\n    return <div className={s.content}>\r\n    \r\n    <div><ProfileInfo profile = {props.profile}/></div>\r\n    <div><ProfileStatus {...props} /></div>\r\n    <div><MyPostsConteiner/></div>\r\n    \r\n   \r\n  </div>\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as axios from 'axios';\r\n\r\n\r\nimport { setProfile, setStatus, getStatus, putStatus } from '../../redux/profile-page-reducer';\r\nimport MyPostsConteiner from './MyPosts/MyPostsConteiner';\r\nimport Profile from './Profile';\r\nimport s from './Profile.module.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthRedirect from '../../hoc';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileApiConteiner extends React.Component  {\r\n\r\nrefreshProfile=()=>{\r\n  let userId = this.props.match.params.userId\r\n  if(!userId){userId=12788}\r\n  axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+userId).then(response => {\r\n    this.props.setProfile(response.data)\r\n    \r\n  })\r\n\r\n  this.props.getStatus(userId)\r\n}\r\n  \r\ncomponentDidMount(){\r\n  \r\n  \r\n  this.refreshProfile()\r\n}\r\n\r\ncomponentDidUpdate(prevProps){\r\n  if(this.props.match.params.userId!==prevProps.match.params.userId) this.refreshProfile()\r\n}\r\n\r\n  render(){\r\n    \r\n    \r\n    return (\r\n    <Profile {...this.props}  />)}\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status\r\n  \r\n})\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {setProfile, setStatus, getStatus, putStatus}), \r\nwithRouter, \r\n//AuthRedirect\r\n)(ProfileApiConteiner)","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport styles from './UsersPage.module.css'\r\nimport {  } from '../../assets/images/user.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as axios from 'axios'\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 122,\r\n    margin: 5,\r\n    borderRadius: 11,\r\n    marginTop:11,\r\n    height:222\r\n    \r\n    \r\n  },\r\n  media: {\r\n    width:122,\r\n    height: 122 ,\r\n    \r\n  },\r\n  \r\n});\r\n\r\n\r\n\r\n\r\n const userPhoto = 'https://qph.fs.quoracdn.net/main-qimg-4981709faa24c748ed82b3670bf32bea'\r\n\r\n\r\n\r\n\r\nlet Users=(props)=>{\r\n  const classes = useStyles();\r\n   \r\n    let pagesCount = Math.ceil(props.itemsCount/props.pageSize)\r\n    let pages=[]\r\n    for (let i=1; i<=pagesCount; i++){\r\n      pages.push(i)\r\n    }\r\n\r\n    let portionSize = 10\r\n    let portionCount = Math.ceil(pagesCount/portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPage = portionSize*(portionNumber-1)+1\r\n    let rightPage = portionSize*portionNumber\r\n    \r\n    \r\n  return <div> \r\n    <div>\r\n      {portionNumber>1&&<button onClick={()=>setPortionNumber(portionNumber-1)}>Prev</button>}\r\n      {pages.filter(p => leftPage<=p && p<=rightPage)\r\n      .map((p)=> {      \r\n        return <span className={props.currentPage===p && styles.selected}\r\n                onClick={()=>props.onPageChanged(p)}>{p}</span>\r\n                })\r\n                }\r\n      {portionNumber<portionCount&&<button onClick= {()=>setPortionNumber(portionNumber+1)}>Next</button> }         \r\n  </div>\r\n    \r\n  {/* users rendering on page */}\r\n  {props.users.map(u => <div key={u.id}>\r\n    <Card className={classes.root}>\r\n        <CardActionArea>\r\n        <NavLink to ={'/profile/' +u.id} ><CardMedia\r\n            className={classes.media}\r\n            image={u.photos.small != null ? u.photos.small : userPhoto }\r\n            title={\"Contemplative Reptile\"}\r\n          /></NavLink>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h7\">\r\n            {u.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {u.status}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n        {u.follow\r\n        ?<Button disabled={props.followInProgress.some(id=>id===u.id)} onClick={()=>{\r\n          \r\n          props.toogleIsFollow(true, u.id)\r\n          axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,\r\n          {\r\n            withCredentials:true, \r\n            headers:{\"API-KEY\":\"c0a17497-1a2e-493a-b759-d597a8494645\"}\r\n          }).then(response => {\r\n            if (response.resultCode===0){\r\n          props.unfollow(u.id)}\r\n          props.toogleIsFollow(false, u.id)})\r\n           \r\n          }}>Unfollow</Button>\r\n        :<Button disabled={props.followInProgress.some(id=>id===u.id)}  onClick={()=>{\r\n          props.toogleIsFollow(true, u.id)\r\n          \r\n          axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, \r\n          {\r\n            withCredentials:true,\r\n            headers:{\"API-KEY\":\"c0a17497-1a2e-493a-b759-d597a8494645\"}\r\n          }).then(response => {\r\n            if (response.resultCode===0){\r\n          props.follow(u.id)}\r\n          props.toogleIsFollow(false, u.id)})\r\n          \r\n          }}>Follow</Button>}\r\n        </CardActions>\r\n      </Card>\r\n  \r\n\r\n\r\n   \r\n  \r\n\r\n  </div> \r\n      )}\r\n      </div>}\r\n   \r\n        \r\n  \r\n\r\n\r\nexport default Users","import getUsers from \"../api\"\n\nlet initialState = {\n  users: [],\n  currentPage:1,\n  pageSize:5,\n  itemsCount:0,\n  isFetching: false,\n  followInProgress: []\n}\nlet usersPageReducer=(state=initialState, action)=>{\n  \n \n    switch(action.type){\n\n      case('IS-FETCHING'):\n      return{\n        ...state,\n        isFetching: action.isFetching\n      }\n      case('IS-FOLLOW'):\n      return{\n        ...state,\n        followInProgress: action.isFetching===true?[...state.followInProgress, action.userId] : state.followInProgress.filter(id=>id!=action.userId)\n      }\n      \n      case('FOLLOW'):\n      return{...state,\n      users:state.users.map(u=>{\n       if (u.id===action.userId) return {...u, follow:true}\n      else return u})}\n\n      case('UNFOLLOW'):\n     return {...state,\n      users:state.users.map(u=>{\n        if (u.id===action.userId) return {...u, follow:false}\n        else return u})}\n      \n      case('SET_USERS'):\n        return {...state, users:[...action.users]}\n      \n      case('SET_PAGE'):\n        return {...state, currentPage:action.currentPage}\n\n      case('SET_TOTAL_COUNT'):\n        return {...state, itemsCount: action.totalCount}\n\n\n\n      default:\n        return state\n    }\n}\n\nexport let follow = (userId) => ({type: 'FOLLOW', userId})\nexport let unfollow = (userId) => ({type: 'UNFOLLOW', userId})\nexport let setUsers = (users) => ({type: 'SET_USERS', users})\nexport let setCurrentPage = (currentPage) => ({type: 'SET_PAGE', currentPage})\nexport let setTotalCount = (totalCount) => ({type: 'SET_TOTAL_COUNT', totalCount})\nexport let toogleIsFetching = (isFetching)=> ({type:'IS-FETCHING', isFetching})\nexport let toogleIsFollow = (isFetching, userId)=> ({type:'IS-FOLLOW', isFetching, userId})\n\nexport const getUsersThunk = (currentPage, pageSize)=> async (dispatch)=>{\n  const response = await getUsers(currentPage, pageSize)\n    dispatch(toogleIsFetching(false))\n    dispatch(setUsers(response.data.items))\n    dispatch(setTotalCount(response.data.totalCount))\n}\nexport default usersPageReducer; \n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as axios from 'axios'\r\n\r\nimport { follow, setCurrentPage, setTotalCount, setUsers, unfollow, toogleIsFetching, toogleIsFollow, getUsersThunk } from '../../redux/users-page-reducer';\r\nimport Users from './UsersPage';\r\nimport getUsers from '../../api';\r\nimport preloader from '../../assets/preloader/preloader.gif'\r\n\r\nexport let Preloader = () =>{\r\n  return <div><img src= {preloader}/></div>\r\n}\r\n\r\nclass usersPageApi extends React.Component  {\r\n\r\n  componentDidMount() {\r\n    this.props.toogleIsFetching(true)\r\n    this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    \r\n  }\r\n    \r\n  onPageChanged=(pageNumber)=>{\r\n\r\n    this.props.setCurrentPage(pageNumber)\r\n    this.props.toogleIsFetching(true)\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page= ${pageNumber}`,{\r\n      withCredentials:true\r\n    }).then(response => {\r\n      this.props.toogleIsFetching(false)\r\n      this.props.setUsers(response.data.items)\r\n      console.log(response.data.items)\r\n      \r\n    \r\n    } )\r\n  }\r\n    \r\n  render() {\r\n    \r\n    return <>\r\n      { this.props.isFetching ? <Preloader/>:null}\r\n     <Users itemsCount={this.props.itemsCount}\r\n    pageSize={this.props.pageSize}\r\n    currentPage= {this.props.currentPage}\r\n    onPageChanged={this.onPageChanged}\r\n    users={this.props.users}  \r\n    unfollow={this.props.unfollow}\r\n    follow={this.props.follow} \r\n    followInProgress={this.props.followInProgress}\r\n    toogleIsFollow= {this.props.toogleIsFollow}     /></>}\r\n  }\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pages: state.usersPage.pages,\r\n    currentPage: state.usersPage.currentPage,\r\n    pageSize: state.usersPage.pageSize,\r\n    itemsCount: state.usersPage.itemsCount,\r\n    isFetching: state.usersPage.isFetching,\r\n    followInProgress: state.usersPage.followInProgress\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, \r\n                      {setTotalCount, follow, unfollow, setUsers, setCurrentPage, toogleIsFetching,\r\n                        getUsersThunk, toogleIsFollow })(usersPageApi)\r\n\r\n","import {addAuthData} from '../redux/auth-reducer'\n\nlet initialState = {\n  initialize:false\n}\nlet appReducer=(state=initialState, action)=>{\n  \n \n    switch(action.type){\n      case('INITIAL-DATA'):\n      return{\n        initialize:true        \n      }\n    \n\n      default:\n        return state\n    }\n}\n\n\nlet initDone = () => ({type: 'INITIAL-DATA'})\nexport let initApp = ()=> async (dispatch)=> {\n  await dispatch(addAuthData())\n  \n    dispatch(initDone())\n  \n}\n\n\nexport default appReducer\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport Login from './components/Dialogs/Dialog/Login';\nimport DialogsConteiner from './components/Dialogs/DialogsConteiner';\nimport Header from './components/Header/Header';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport ProfileConteiner from './components/Profile/ProfileConteiner';\nimport UsersPage from './components/UsersPage/UsersPage';\nimport UsersContein from './components/UsersPage/UsersPageConteiner';\nimport {initApp} from './redux/app-reduser'\nimport Preloader from './components/UsersPage/UsersPageConteiner'\n\n\n\nclass App extends React.Component  {\n  \n  componentDidMount(){\n    this.props.initApp()\n  }\n\n render(){\n   if (!this.props.initialize){\n     return <Preloader/>\n   }\n  return (\n    \n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/profile/:userId?' render={()=>\n            <ProfileConteiner/>} />\n          <Route path='/dialogs' render={()=>\n            <DialogsConteiner/>} />\n          <Route path='/users' render={()=>\n            <UsersContein/>} />\n          <Route path='/login' render={()=>\n            <Login/>}/> \n        </div>\n      </div>\n    \n  )};\n}\n\n\nlet mapStateToProps = (state)=> ({\n  initialize:state.app.initialize\n})\n\nexport default connect(mapStateToProps, {initApp} )(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport dialogsPageReducer from \"./dialogs-page-reducer\"\nimport profilePageReducer from \"./profile-page-reducer\"\nimport usersPageReducer from \"./users-page-reducer\";\nimport thunkMiddleWare from \"redux-thunk\"\nimport authReducer from \"./auth-reducer\";\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./app-reduser\";\n\n\nlet reducers = combineReducers({\n    profilePage: profilePageReducer,\n    dialogsPage: dialogsPageReducer,\n    usersPage: usersPageReducer,\n    auth: authReducer,\n    form: formReducer,\n    app:appReducer\n})\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleWare))\n\nwindow.store = store\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\n\n\n\n    ReactDOM.render(\n      <BrowserRouter>\n    \n      <Provider store={store} >\n      <App/>\n      </Provider> \n    \n    </BrowserRouter>,\n    document.getElementById('root')\n  )\n  \n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3FHTO\",\"item\":\"Navbar_item__1XozW\",\"activeLink\":\"Navbar_activeLink__3CEG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__34Mao\",\"dialogItems\":\"Dialogs_dialogItems__25RCe\",\"active\":\"Dialogs_active__3ZcsR\",\"messages\":\"Dialogs_messages__2d2iE\",\"message\":\"Dialogs_message__3fUmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__12J2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3vyM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3UcqB\",\"login\":\"Header_login__1-jhf\"};"],"sourceRoot":""}